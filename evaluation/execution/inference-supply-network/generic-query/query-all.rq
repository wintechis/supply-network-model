PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sn: <https://purl.org/sn/vocab#>
PREFIX qb:    <http://purl.org/linked-data/cube#>

CONSTRUCT {
    # resulting supply network
    ?target_supplyNetwork a sn:SupplyNetwork ;
        sn:structure ?target_supplyNetworkStructure ;
        sn:supplyLink ?target_supplylink ;
        sn:inferredFrom ?source_supplyNetwork .

    # resulting entities
    ?target_dimA_from_entity a ?target_dimA_class ;
        rdfs:label ?target_dimA_from_entitylabel .
    ?target_dimA_into_entity a ?target_dimA_class ;
        rdfs:label ?target_dimA_into_entitylabel .
    ?target_dimB_from_entity a ?target_dimB_class ;
        rdfs:label ?target_dimB_from_entitylabel .
    ?target_dimB_into_entity a ?target_dimB_class ;
        rdfs:label ?target_dimB_into_entitylabel .

    # resulting supply links
    ?target_supplylink a sn:SupplyLink ;
        qb:sliceStructure ?target_supplyLinkKey ;
        ?target_dimA_from_property ?target_dimA_from_entity ;
        ?target_dimA_into_property ?target_dimA_into_entity ;
        ?target_dimB_from_property ?target_dimB_from_entity ;
        ?target_dimB_into_property ?target_dimB_into_entity ;
        sn:volume ?target_volume .

    # resulting volumes
    ?target_volume a sn:Volume ;
        sn:time ?time ;
        sn:unit ?unit ;
        sn:quantity ?aggregatedQuantity .
} WHERE {
    {
        SELECT ?source_supplyNetwork ?target_supplyNetwork ?target_supplylink ?target_volume
        ?target_dimA_from_entity ?target_dimA_from_entitylabel ?target_dimA_into_entity ?target_dimA_into_entitylabel
        ?target_dimB_from_entity ?target_dimB_from_entitylabel ?target_dimB_into_entity ?target_dimB_into_entitylabel
        ?target_dimA_from_property ?target_dimA_into_property ?target_dimA_class
        ?target_dimB_from_property ?target_dimB_into_property ?target_dimB_class
        ?target_supplyLinkKey ?target_supplyNetworkStructure
        ?time ?unit (SUM(?quantity) AS ?aggregatedQuantity)
        WHERE {
            {
            # query part to infer single-dimension supply network from multi-dimension supply network
            # where the single-dimension is NOT part of the multi-dimension

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_multidim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .
                
                # identify target abstraction and associated entity property that links source and target
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    sn:higherAbstractionLevel ?target_supplyNetworkStructure ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property .
                ?source_dimA_from_property rdfs:range ?source_class .
                ?source_dimA_into_property rdfs:range ?source_class .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?target_dimA_from_property ;
                    qb:component/qb:dimension ?target_dimA_into_property .
                ?target_dimA_from_property rdfs:range ?target_dimA_class .
                ?target_dimA_into_property rdfs:range ?target_dimA_class .
                ?associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_class ;
                    rdfs:range ?target_dimA_class .

                # identify source dimensions in tbox
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?source_dimB_from_property ;
                    qb:component/qb:dimension ?source_dimB_into_property ;
                    qb:sliceKey ?source_multidim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_dimB_from_property rdfs:subPropertyOf sn:from .
                ?source_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER (?source_dimA_from_property != ?source_dimB_from_property)
                FILTER (?source_dimA_into_property != ?source_dimB_into_property)
                ?source_multidim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property , ?source_dimB_from_property , ?source_dimB_into_property .

                # identify target dimensions in tbox
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?target_dimA_from_property , ?target_dimA_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?target_supplyLinkKey .
                ?target_dimA_from_property rdfs:subPropertyOf sn:from .
                ?target_dimA_into_property rdfs:subPropertyOf sn:into .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?target_dimA_from_property, ?target_dimA_into_property, sn:time))}

                # identify the source entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    ?source_dimB_from_property ?source_dimB_from_entity ;
                    ?source_dimB_into_property ?source_dimB_into_entity ;
                    sn:supplyLinkKey ?source_multidim_supplyLinkKey ;
                    sn:volume ?volume .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .
                ?source_dimB_from_entity a ?source_dimB_class .
                ?source_dimB_into_entity a ?source_dimB_class .

                # identify the target entities for all dimensions in abox
                ?source_dimA_from_entity ?associatedEntity_property ?target_dimA_from_entity .
                ?source_dimA_into_entity ?associatedEntity_property ?target_dimA_into_entity .

                # varify classes in tbox
                ?source_dimB_class rdfs:subClassOf sn:Entity .

            } UNION {
            # query part to infer single-dimension supply network from multi-dimension supply network
            # where the single-dimension IS part of the multi-dimension

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_multidim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .

                # identify dimensions in tbox
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property ;
                    qb:component/qb:dimension ?source_dimB_from_property ;
                    qb:component/qb:dimension ?source_dimB_into_property ;
                    qb:sliceKey ?source_multidim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_dimB_from_property rdfs:subPropertyOf sn:from .
                ?source_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER (?source_dimA_from_property != ?source_dimB_from_property)
                FILTER (?source_dimA_into_property != ?source_dimB_into_property)
                ?source_multidim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property , ?source_dimB_from_property , ?source_dimB_into_property .
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property ;
                    qb:sliceKey ?target_supplyLinkKey .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?source_dimA_from_property, ?source_dimA_into_property, sn:time))}

                # identify the entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    ?source_dimB_from_property ?source_dimB_from_entity ;
                    ?source_dimB_into_property ?source_dimB_into_entity ;
                    sn:supplyLinkKey ?source_multidim_supplyLinkKey ;
                    sn:volume ?volume .
                BIND (?source_dimA_from_property AS ?target_dimA_from_property) .
                BIND (?source_dimA_into_property AS ?target_dimA_into_property) .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .
                BIND (?source_dimA_from_entity AS ?target_dimA_from_entity) .
                BIND (?source_dimA_into_entity AS ?target_dimA_into_entity) .
                ?source_dimB_from_entity a ?source_dimB_class .
                ?source_dimB_into_entity a ?source_dimB_class .

                # varify classes in tbox
                ?source_dimB_class rdfs:subClassOf sn:Entity .

            } UNION {
            # query part to infer single-dimension supply network from single-dimension supply network

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_singledim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .
                
                # identify target abstraction and associated entity property that links source and target
                ?source_singledim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    sn:higherAbstractionLevel ?target_supplyNetworkStructure ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property .
    			FILTER NOT EXISTS { ?source_singledim_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?source_dimA_from_property, ?source_dimA_into_property, sn:time))}
                ?source_dimA_from_property rdfs:range ?source_class .
                ?source_dimA_into_property rdfs:range ?source_class .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?target_dimA_from_property ;
                    qb:component/qb:dimension ?target_dimA_into_property .
                ?target_dimA_from_property rdfs:range ?target_dimA_class .
                ?target_dimA_into_property rdfs:range ?target_dimA_class .
                ?associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_class ;
                    rdfs:range ?target_dimA_class .

                # identify source dimensions in tbox
                ?source_singledim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?source_singledim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_singledim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property .

                # identify target dimensions in tbox
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?target_dimA_from_property , ?target_dimA_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?target_supplyLinkKey .
                ?target_dimA_from_property rdfs:subPropertyOf sn:from .
                ?target_dimA_into_property rdfs:subPropertyOf sn:into .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?target_dimA_from_property, ?target_dimA_into_property, sn:time))}

                # identify the source entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    sn:supplyLinkKey ?source_singledim_supplyLinkKey ;
                    sn:volume ?volume .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .

                # identify the target entities for all dimensions in abox
                ?source_dimA_from_entity ?associatedEntity_property ?target_dimA_from_entity .
                ?source_dimA_into_entity ?associatedEntity_property ?target_dimA_into_entity .

            } UNION {
            # query part to infer multi-dimension supply network from single-dimension supply network

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_singledim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .
                
                # identify target abstraction and associated entity property that links source and target
                ?source_singledim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    sn:higherAbstractionLevel ?target_supplyNetworkStructure ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property .
    			FILTER NOT EXISTS { ?source_singledim_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?source_dimA_from_property, ?source_dimA_into_property, sn:time))}
                ?source_dimA_from_property rdfs:range ?source_class .
                ?source_dimA_into_property rdfs:range ?source_class .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?target_dimA_from_property ;
                    qb:component/qb:dimension ?target_dimA_into_property ;
                    qb:component/qb:dimension ?target_dimB_from_property ;
                    qb:component/qb:dimension ?target_dimB_into_property .
                ?target_dimA_from_property rdfs:range ?target_dimA_class .
                ?target_dimA_into_property rdfs:range ?target_dimA_class .
                ?target_dimB_from_property rdfs:range ?target_dimB_class .
                ?target_dimB_into_property rdfs:range ?target_dimB_class .
                ?dimA_associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_class ;
                    rdfs:range ?target_dimA_class .
                ?dimB_associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_class ;
                    rdfs:range ?target_dimB_class .
                FILTER (?dimA_associatedEntity_property != ?dimB_associatedEntity_property)
                FILTER (?target_dimA_class != ?target_dimB_class)

                # identify source dimensions in tbox
                ?source_singledim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?source_singledim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_singledim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property .

                # identify target dimensions in tbox
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?target_dimA_from_property , ?target_dimA_into_property , ?target_dimB_from_property , ?target_dimB_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?target_supplyLinkKey .
                ?target_dimA_from_property rdfs:subPropertyOf sn:from .
                ?target_dimA_into_property rdfs:subPropertyOf sn:into .
                ?target_dimB_from_property rdfs:subPropertyOf sn:from .
                ?target_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?target_dimA_from_property, ?target_dimA_into_property, ?target_dimB_from_property, ?target_dimB_into_property, sn:time))}

                # identify the source entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    sn:supplyLinkKey ?source_singledim_supplyLinkKey ;
                    sn:volume ?volume .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .

                # identify the target entities for all dimensions in abox
                ?source_dimA_from_entity ?dimA_associatedEntity_property ?target_dimA_from_entity .
                ?source_dimA_into_entity ?dimA_associatedEntity_property ?target_dimA_into_entity .
                ?source_dimA_from_entity ?dimB_associatedEntity_property ?target_dimB_from_entity .
                ?source_dimA_into_entity ?dimB_associatedEntity_property ?target_dimB_into_entity .

                # varify classes in tbox
                ?target_dimB_class rdfs:subClassOf sn:Entity .

                # identify labels and class of entities in abox
                ?target_dimB_from_entity rdfs:label ?target_dimB_from_entitylabel .
                ?target_dimB_into_entity rdfs:label ?target_dimB_into_entitylabel .
                ?target_dimB_from_entity a ?target_dimB_class .
                ?target_dimB_into_entity a ?target_dimB_class .

            } UNION {
            # query part to infer multi-dimension supply network from multi-dimension supply network
            # where ONE of the target dimensions is part of the source multi-dimension

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_multidim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .
                
                # identify target abstraction and associated entity property that links source and target
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    sn:higherAbstractionLevel ?target_supplyNetworkStructure ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property .
                ?source_dimA_from_property rdfs:range ?source_class .
                ?source_dimA_into_property rdfs:range ?source_class .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?target_dimA_from_property ;
                    qb:component/qb:dimension ?target_dimA_into_property ;
                    qb:component/qb:dimension ?source_dimB_from_property ;
                    qb:component/qb:dimension ?source_dimB_into_property .
                ?target_dimA_from_property rdfs:range ?target_dimA_class .
                ?target_dimA_into_property rdfs:range ?target_dimA_class .
                ?associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_class ;
                    rdfs:range ?target_dimA_class .

                # identify source dimensions in tbox
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?source_dimB_from_property ;
                    qb:component/qb:dimension ?source_dimB_into_property ;
                    qb:sliceKey ?source_multidim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_dimB_from_property rdfs:subPropertyOf sn:from .
                ?source_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER (?source_dimA_from_property != ?source_dimB_from_property)
                FILTER (?source_dimA_into_property != ?source_dimB_into_property)
                FILTER (?target_dimA_from_property != ?source_dimB_from_property)
                FILTER (?target_dimA_into_property != ?source_dimB_into_property)
                ?source_multidim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property , ?source_dimB_from_property , ?source_dimB_into_property .

                # identify target dimensions in tbox
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?target_dimA_from_property , ?target_dimA_into_property , ?source_dimB_from_property , ?source_dimB_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?target_supplyLinkKey .
                ?target_dimA_from_property rdfs:subPropertyOf sn:from .
                ?target_dimA_into_property rdfs:subPropertyOf sn:into .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?target_dimA_from_property, ?target_dimA_into_property, ?source_dimB_from_property, ?source_dimB_into_property, sn:time))}

                # identify the source entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    ?source_dimB_from_property ?source_dimB_from_entity ;
                    ?source_dimB_into_property ?source_dimB_into_entity ;
                    sn:supplyLinkKey ?source_multidim_supplyLinkKey ;
                    sn:volume ?volume .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .
                ?source_dimB_from_entity a ?source_dimB_class .
                ?source_dimB_into_entity a ?source_dimB_class .

                # identify the target entities for all dimensions in abox
                ?source_dimA_from_entity ?associatedEntity_property ?target_dimA_from_entity .
                ?source_dimA_into_entity ?associatedEntity_property ?target_dimA_into_entity .
                BIND (?source_dimB_from_property AS ?target_dimB_from_property) .
                BIND (?source_dimB_into_property AS ?target_dimB_into_property) .
                BIND (?source_dimB_from_entity AS ?target_dimB_from_entity) .
                BIND (?source_dimB_into_entity AS ?target_dimB_into_entity) .

                # varify classes in tbox
                ?source_dimB_class rdfs:subClassOf sn:Entity .
                ?target_dimB_class rdfs:subClassOf sn:Entity .

                # identify labels and class of entities in abox
                ?target_dimB_from_entity a ?target_dimB_class .
                ?target_dimB_into_entity a ?target_dimB_class .
                ?target_dimB_from_entity rdfs:label ?target_dimB_from_entitylabel .
                ?target_dimB_into_entity rdfs:label ?target_dimB_into_entitylabel .

            } UNION {
            # query part to infer multi-dimension supply network from multi-dimension supply network
            # where NONE of the target dimensions is part of the source multi-dimension
            # and both target dimensions infer from one source dimension

                # identify supply network
                ?source_supplyNetwork a sn:SupplyNetwork ;
                    sn:structure ?source_multidim_supplyNetworkStructure ;
                    sn:supplyLink ?source_supplylink .
                
                # identify target abstraction and associated entity property that links source and target
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    sn:higherAbstractionLevel ?target_supplyNetworkStructure ;
                    qb:component/qb:dimension ?source_dimA_from_property ;
                    qb:component/qb:dimension ?source_dimA_into_property ;
                    qb:component/qb:dimension ?source_dimB_from_property ;
                    qb:component/qb:dimension ?source_dimB_into_property .
                ?source_dimA_from_property rdfs:range ?source_dimA_class .
                ?source_dimA_into_property rdfs:range ?source_dimA_class .
                ?source_dimB_from_property rdfs:range ?source_dimB_class .
                ?source_dimB_into_property rdfs:range ?source_dimB_class .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:component/qb:dimension ?target_dimA_from_property ;
                    qb:component/qb:dimension ?target_dimA_into_property ;
                    qb:component/qb:dimension ?target_dimB_from_property ;
                    qb:component/qb:dimension ?target_dimB_into_property .
                ?target_dimA_from_property rdfs:range ?target_dimA_class .
                ?target_dimA_into_property rdfs:range ?target_dimA_class .
                ?target_dimB_from_property rdfs:range ?target_dimB_class .
                ?target_dimB_into_property rdfs:range ?target_dimB_class .
                ?dimA_associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_dimA_class ;
                    rdfs:range ?target_dimA_class .
                ?dimB_associatedEntity_property rdfs:subPropertyOf sn:associatedEntity ;
                    rdfs:domain ?source_dimA_class ;
                    rdfs:range ?target_dimB_class .
                FILTER (?dimA_associatedEntity_property != ?dimB_associatedEntity_property)

                # identify source dimensions in tbox
                ?source_multidim_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?source_multidim_supplyLinkKey .
                ?source_dimA_from_property rdfs:subPropertyOf sn:from .
                ?source_dimA_into_property rdfs:subPropertyOf sn:into .
                ?source_dimB_from_property rdfs:subPropertyOf sn:from .
                ?source_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER (?source_dimA_from_property != ?source_dimB_from_property)
                FILTER (?source_dimA_into_property != ?source_dimB_into_property)
                FILTER (?target_dimA_from_property != ?target_dimB_from_property)
                FILTER (?target_dimA_into_property != ?target_dimB_into_property)
                ?source_multidim_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?source_dimA_from_property , ?source_dimA_into_property , ?source_dimB_from_property , ?source_dimB_into_property .

                # identify target dimensions in tbox
                ?target_supplyLinkKey a sn:SupplyLinkKey ;
                    qb:componentProperty ?target_dimA_from_property , ?target_dimA_into_property , ?target_dimB_from_property , ?target_dimB_into_property .
                ?target_supplyNetworkStructure a qb:DataStructureDefinition ;
                    qb:sliceKey ?target_supplyLinkKey .
                ?target_dimA_from_property rdfs:subPropertyOf sn:from .
                ?target_dimA_into_property rdfs:subPropertyOf sn:into .
                ?target_dimB_from_property rdfs:subPropertyOf sn:from .
                ?target_dimB_into_property rdfs:subPropertyOf sn:into .
                FILTER NOT EXISTS { ?target_supplyNetworkStructure qb:component/qb:dimension ?dim . FILTER (?dim NOT IN (?target_dimA_from_property, ?target_dimA_into_property, ?target_dimB_from_property, ?target_dimB_into_property, sn:time))}

                # identify the source entities for all dimensions in abox
                ?source_supplylink a sn:SupplyLink ;
                    ?source_dimA_from_property ?source_dimA_from_entity ;
                    ?source_dimA_into_property ?source_dimA_into_entity ;
                    ?source_dimB_from_property ?source_dimB_from_entity ;
                    ?source_dimB_into_property ?source_dimB_into_entity ;
                    sn:supplyLinkKey ?source_multidim_supplyLinkKey ;
                    sn:volume ?volume .
                ?source_dimA_from_entity a ?source_dimA_class .
                ?source_dimA_into_entity a ?source_dimA_class .
                ?source_dimB_from_entity a ?source_dimB_class .
                ?source_dimB_into_entity a ?source_dimB_class .

                # identify the target entities for all dimensions in abox
                ?source_dimA_from_entity ?dimA_associatedEntity_property ?target_dimA_from_entity .
                ?source_dimA_into_entity ?dimA_associatedEntity_property ?target_dimA_into_entity .
                ?source_dimA_from_entity ?dimB_associatedEntity_property ?target_dimB_from_entity .
                ?source_dimA_into_entity ?dimB_associatedEntity_property ?target_dimB_into_entity .

                # varify classes in tbox
                ?source_dimB_class rdfs:subClassOf sn:Entity .
                ?target_dimB_class rdfs:subClassOf sn:Entity .

                # identify labels and class of entities in abox
                ?target_dimB_from_entity a ?target_dimB_class .
                ?target_dimB_into_entity a ?target_dimB_class .
                ?target_dimB_from_entity rdfs:label ?target_dimB_from_entitylabel .
                ?target_dimB_into_entity rdfs:label ?target_dimB_into_entitylabel .

            }

            # varify classes in tbox
            ?source_dimA_class rdfs:subClassOf sn:Entity .
            ?target_dimA_class rdfs:subClassOf sn:Entity .

            # identify labels and class of entities in abox
            ?target_dimA_from_entity rdfs:label ?target_dimA_from_entitylabel .
            ?target_dimA_into_entity rdfs:label ?target_dimA_into_entitylabel .
            ?target_dimA_from_entity a ?target_dimA_class .
            ?target_dimA_into_entity a ?target_dimA_class .

            # identify volumes in abox
            ?volume a sn:Volume ;
                sn:time ?time ;
                sn:unit ?unit ;
                sn:quantity ?quantity .

            # coin uris
            BIND(IRI(CONCAT("https://www.example.org/",MD5(CONCAT(STR(?source_supplyNetwork),STR(?target_supplyNetworkStructure))))) AS ?target_supplyNetwork) .
            BIND(COALESCE(?target_dimB_from_entity, <https://www.dummy.org>) AS ?target_dimB_from_id) . # always have a binding to coin the uri
            BIND(COALESCE(?target_dimB_into_entity, <https://www.dummy.org>) AS ?target_dimB_into_id) .
            BIND(IF(STR(?target_dimA_from_entity) < STR(?target_dimB_from_id), ?target_dimA_from_entity, ?target_dimB_from_id) AS ?target_first_from_entity) . # ensure consistent order so we dont get two uris for each pair
            BIND(IF(STR(?target_dimA_from_entity) < STR(?target_dimB_from_id), ?target_dimB_from_id, ?target_dimA_from_entity) AS ?target_second_from_entity) .
            BIND(IF(STR(?target_dimA_into_entity) < STR(?target_dimB_into_id), ?target_dimA_into_entity, ?target_dimB_into_id) AS ?target_first_into_entity) .
            BIND(IF(STR(?target_dimA_into_entity) < STR(?target_dimB_into_id), ?target_dimB_into_id, ?target_dimA_into_entity) AS ?target_second_into_entity) .
            BIND(IRI(CONCAT("https://www.example.org/",MD5(CONCAT(STR(?target_first_from_entity),STR(?target_first_into_entity),STR(?target_second_from_entity),STR(?target_second_into_entity))))) AS ?target_supplylink) .
            BIND(IRI(CONCAT("https://www.example.org/",MD5(CONCAT(STR(?target_supplylink),STR(?time),STR(?unit))))) AS ?target_volume) .
            
        }
        GROUP BY ?source_supplyNetwork ?target_supplyNetwork ?target_supplylink ?target_volume
        ?target_dimA_from_entity ?target_dimA_from_entitylabel ?target_dimA_into_entity ?target_dimA_into_entitylabel
        ?target_dimB_from_entity ?target_dimB_from_entitylabel ?target_dimB_into_entity ?target_dimB_into_entitylabel
        ?target_dimA_from_property ?target_dimA_into_property ?target_dimA_class
        ?target_dimB_from_property ?target_dimB_into_property ?target_dimB_class
        ?target_supplyLinkKey ?target_supplyNetworkStructure
        ?time ?unit 
    }
}
