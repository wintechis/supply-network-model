%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 204 62
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Montag, 25. November 2024 um 14:55:22 Mitteleuropäische Normalzeit
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
204 62 setpagesize
0 0 0 0 setmargins
0 0 setorigin
204 62 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
204.000 0.00000 l
204.000 62.0000 l
0.00000 62.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
204.000 0.00000 l
204.000 62.0000 l
0.00000 62.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 204 62 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -464.000 -214.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
464.000 214.000 m
668.000 214.000 l
668.000 276.000 l
464.000 276.000 l
464.000 214.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -464.000 -214.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -464.000 -214.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -464.000 -214.000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
503.000 256.000 m
503.000 264.284 496.284 271.000 488.000 271.000  c
479.716 271.000 473.000 264.284 473.000 256.000  c
473.000 247.716 479.716 241.000 488.000 241.000  c
496.284 241.000 503.000 247.716 503.000 256.000  c
h
f
0 J
1.45000 M
newpath
503.000 256.000 m
503.000 264.284 496.284 271.000 488.000 271.000  c
479.716 271.000 473.000 264.284 473.000 256.000  c
473.000 247.716 479.716 241.000 488.000 241.000  c
496.284 241.000 503.000 247.716 503.000 256.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
476.576 227.998 m
478.279 230.545 l
478.748 231.253 479.097 231.701 479.326 231.889  c
479.555 232.066 479.847 232.165 480.201 232.186  c
480.201 232.404 l
476.779 232.404 l
476.779 232.186 l
477.008 232.186 477.180 232.165 477.295 232.123  c
477.378 232.081 477.446 232.024 477.498 231.951  c
477.550 231.878 477.576 231.805 477.576 231.732  c
477.576 231.649 477.555 231.561 477.514 231.467  c
477.493 231.404 477.389 231.232 477.201 230.951  c
475.842 228.904 l
474.186 231.045 l
474.008 231.274 473.899 231.425 473.857 231.498  c
473.826 231.571 473.811 231.649 473.811 231.732  c
473.811 231.857 473.863 231.962 473.967 232.045  c
474.081 232.128 474.285 232.175 474.576 232.186  c
474.576 232.404 l
471.764 232.404 l
471.764 232.186 l
471.962 232.165 472.133 232.123 472.279 232.061  c
472.519 231.956 472.748 231.821 472.967 231.654  c
473.186 231.477 473.436 231.212 473.717 230.857  c
475.592 228.498 l
474.029 226.201 l
473.602 225.587 473.238 225.180 472.936 224.982  c
472.644 224.785 472.305 224.680 471.920 224.670  c
471.920 224.451 l
475.592 224.451 l
475.592 224.670 l
475.279 224.680 475.066 224.732 474.951 224.826  c
474.837 224.920 474.779 225.019 474.779 225.123  c
474.779 225.269 474.873 225.482 475.061 225.764  c
476.279 227.576 l
477.686 225.795 l
477.852 225.587 477.951 225.446 477.982 225.373  c
478.024 225.290 478.045 225.206 478.045 225.123  c
478.045 225.040 478.024 224.967 477.982 224.904  c
477.920 224.821 477.842 224.764 477.748 224.732  c
477.665 224.701 477.482 224.680 477.201 224.670  c
477.201 224.451 l
480.014 224.451 l
480.014 224.670 l
479.795 224.680 479.613 224.717 479.467 224.779  c
479.258 224.873 479.066 224.998 478.889 225.154  c
478.712 225.300 478.462 225.576 478.139 225.982  c
476.576 227.998 l
h
482.070 224.076 m
482.237 224.076 482.378 224.133 482.492 224.248  c
482.607 224.363 482.664 224.503 482.664 224.670  c
482.664 224.826 482.607 224.967 482.492 225.092  c
482.378 225.206 482.237 225.264 482.070 225.264  c
481.914 225.264 481.773 225.206 481.648 225.092  c
481.534 224.967 481.477 224.826 481.477 224.670  c
481.477 224.503 481.534 224.363 481.648 224.248  c
481.763 224.133 481.904 224.076 482.070 224.076  c
h
482.570 226.873 m
482.570 231.186 l
482.570 231.529 482.591 231.758 482.633 231.873  c
482.685 231.977 482.758 232.055 482.852 232.107  c
482.945 232.160 483.122 232.186 483.383 232.186  c
483.383 232.404 l
480.773 232.404 l
480.773 232.186 l
481.034 232.186 481.206 232.165 481.289 232.123  c
481.383 232.071 481.456 231.988 481.508 231.873  c
481.560 231.748 481.586 231.519 481.586 231.186  c
481.586 229.123 l
481.586 228.540 481.570 228.165 481.539 227.998  c
481.508 227.873 481.461 227.785 481.398 227.732  c
481.346 227.680 481.268 227.654 481.164 227.654  c
481.060 227.654 480.930 227.686 480.773 227.748  c
480.695 227.529 l
482.305 226.873 l
482.570 226.873 l
h
487.092 231.623 m
486.540 232.050 486.191 232.300 486.045 232.373  c
485.837 232.467 485.613 232.514 485.373 232.514  c
485.008 232.514 484.701 232.389 484.451 232.139  c
484.212 231.878 484.092 231.545 484.092 231.139  c
484.092 230.868 484.154 230.639 484.279 230.451  c
484.436 230.191 484.712 229.946 485.107 229.717  c
485.503 229.477 486.165 229.186 487.092 228.842  c
487.092 228.639 l
487.092 228.097 487.003 227.727 486.826 227.529  c
486.660 227.331 486.415 227.232 486.092 227.232  c
485.842 227.232 485.644 227.300 485.498 227.436  c
485.352 227.571 485.279 227.722 485.279 227.889  c
485.295 228.232 l
485.295 228.410 485.248 228.550 485.154 228.654  c
485.061 228.748 484.941 228.795 484.795 228.795  c
484.649 228.795 484.529 228.743 484.436 228.639  c
484.352 228.535 484.311 228.399 484.311 228.232  c
484.311 227.889 484.482 227.576 484.826 227.295  c
485.170 227.014 485.649 226.873 486.264 226.873  c
486.743 226.873 487.133 226.956 487.436 227.123  c
487.665 227.238 487.837 227.425 487.951 227.686  c
488.024 227.852 488.061 228.196 488.061 228.717  c
488.061 230.545 l
488.061 231.055 488.066 231.368 488.076 231.482  c
488.097 231.597 488.128 231.675 488.170 231.717  c
488.222 231.748 488.279 231.764 488.342 231.764  c
488.404 231.764 488.456 231.753 488.498 231.732  c
488.581 231.680 488.738 231.535 488.967 231.295  c
488.967 231.623 l
488.529 232.217 488.113 232.514 487.717 232.514  c
487.529 232.514 487.378 232.446 487.264 232.311  c
487.149 232.175 487.092 231.946 487.092 231.623  c
h
487.092 231.248 m
487.092 229.201 l
486.498 229.441 486.118 229.607 485.951 229.701  c
485.639 229.878 485.415 230.061 485.279 230.248  c
485.144 230.436 485.076 230.639 485.076 230.857  c
485.076 231.139 485.160 231.373 485.326 231.561  c
485.503 231.748 485.701 231.842 485.920 231.842  c
486.212 231.842 486.602 231.644 487.092 231.248  c
h
490.934 228.014 m
491.569 227.253 492.168 226.873 492.730 226.873  c
493.022 226.873 493.272 226.946 493.480 227.092  c
493.699 227.238 493.871 227.482 493.996 227.826  c
494.079 228.055 494.121 228.415 494.121 228.904  c
494.121 231.186 l
494.121 231.529 494.147 231.764 494.199 231.889  c
494.251 231.982 494.324 232.055 494.418 232.107  c
494.512 232.160 494.689 232.186 494.949 232.186  c
494.949 232.404 l
492.293 232.404 l
492.293 232.186 l
492.402 232.186 l
492.652 232.186 492.824 232.149 492.918 232.076  c
493.022 232.003 493.095 231.894 493.137 231.748  c
493.147 231.686 493.152 231.498 493.152 231.186  c
493.152 228.998 l
493.152 228.508 493.090 228.154 492.965 227.936  c
492.840 227.706 492.626 227.592 492.324 227.592  c
491.855 227.592 491.392 227.847 490.934 228.357  c
490.934 231.186 l
490.934 231.550 490.954 231.774 490.996 231.857  c
491.059 231.972 491.137 232.055 491.230 232.107  c
491.324 232.160 491.517 232.186 491.809 232.186  c
491.809 232.404 l
489.152 232.404 l
489.152 232.186 l
489.277 232.186 l
489.548 232.186 489.730 232.118 489.824 231.982  c
489.918 231.847 489.965 231.581 489.965 231.186  c
489.965 229.201 l
489.965 228.555 489.949 228.165 489.918 228.029  c
489.897 227.883 489.855 227.785 489.793 227.732  c
489.730 227.680 489.647 227.654 489.543 227.654  c
489.439 227.654 489.309 227.686 489.152 227.748  c
489.074 227.529 l
490.684 226.873 l
490.934 226.873 l
490.934 228.014 l
h
496.730 224.061 m
496.897 224.061 497.038 224.123 497.152 224.248  c
497.277 224.363 497.340 224.503 497.340 224.670  c
497.340 224.837 497.277 224.977 497.152 225.092  c
497.038 225.206 496.897 225.264 496.730 225.264  c
496.564 225.264 496.423 225.206 496.309 225.092  c
496.194 224.977 496.137 224.837 496.137 224.670  c
496.137 224.503 496.194 224.363 496.309 224.248  c
496.423 224.123 496.564 224.061 496.730 224.061  c
h
497.230 226.873 m
497.230 232.279 l
497.230 233.196 497.033 233.878 496.637 234.326  c
496.251 234.774 495.746 234.998 495.121 234.998  c
494.767 234.998 494.507 234.930 494.340 234.795  c
494.163 234.670 494.074 234.540 494.074 234.404  c
494.074 234.269 494.121 234.149 494.215 234.045  c
494.309 233.951 494.423 233.904 494.559 233.904  c
494.663 233.904 494.767 233.930 494.871 233.982  c
494.934 234.014 495.059 234.113 495.246 234.279  c
495.444 234.446 495.605 234.529 495.730 234.529  c
495.824 234.529 495.913 234.493 495.996 234.420  c
496.090 234.347 496.158 234.227 496.199 234.061  c
496.241 233.894 496.262 233.524 496.262 232.951  c
496.262 229.139 l
496.262 228.545 496.246 228.165 496.215 227.998  c
496.184 227.873 496.137 227.785 496.074 227.732  c
496.022 227.680 495.944 227.654 495.840 227.654  c
495.736 227.654 495.605 227.686 495.449 227.748  c
495.371 227.529 l
496.980 226.873 l
497.230 226.873 l
h
503.408 227.029 m
503.408 230.295 l
503.408 230.910 503.424 231.290 503.455 231.436  c
503.486 231.571 503.533 231.665 503.596 231.717  c
503.658 231.769 503.731 231.795 503.814 231.795  c
503.939 231.795 504.080 231.764 504.236 231.701  c
504.314 231.904 l
502.705 232.576 l
502.439 232.576 l
502.439 231.436 l
501.981 231.936 501.632 232.253 501.393 232.389  c
501.153 232.514 500.898 232.576 500.627 232.576  c
500.325 232.576 500.059 232.488 499.830 232.311  c
499.611 232.133 499.460 231.910 499.377 231.639  c
499.294 231.368 499.252 230.982 499.252 230.482  c
499.252 228.076 l
499.252 227.826 499.221 227.654 499.158 227.561  c
499.106 227.456 499.028 227.378 498.924 227.326  c
498.820 227.274 498.627 227.248 498.346 227.248  c
498.346 227.029 l
500.221 227.029 l
500.221 230.623 l
500.221 231.123 500.309 231.451 500.486 231.607  c
500.663 231.764 500.872 231.842 501.111 231.842  c
501.278 231.842 501.465 231.790 501.674 231.686  c
501.893 231.581 502.148 231.383 502.439 231.092  c
502.439 228.045 l
502.439 227.743 502.382 227.540 502.268 227.436  c
502.163 227.321 501.934 227.258 501.580 227.248  c
501.580 227.029 l
503.408 227.029 l
h
f
2 J
10.0000 M
newpath
649.440 256.000 m
649.440 264.284 642.725 271.000 634.440 271.000  c
626.156 271.000 619.440 264.284 619.440 256.000  c
619.440 247.716 626.156 241.000 634.440 241.000  c
642.725 241.000 649.440 247.716 649.440 256.000  c
h
f
0 J
1.45000 M
newpath
649.440 256.000 m
649.440 264.284 642.725 271.000 634.440 271.000  c
626.156 271.000 619.440 264.284 619.440 256.000  c
619.440 247.716 626.156 241.000 634.440 241.000  c
642.725 241.000 649.440 247.716 649.440 256.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
608.311 232.404 m
608.311 232.186 l
608.608 232.186 l
608.952 232.186 609.192 232.076 609.327 231.857  c
609.410 231.732 609.452 231.446 609.452 230.998  c
609.452 225.857 l
609.452 225.368 609.400 225.061 609.296 224.936  c
609.139 224.758 608.910 224.670 608.608 224.670  c
608.311 224.670 l
608.311 224.451 l
611.546 224.451 l
612.733 224.451 613.634 224.587 614.249 224.857  c
614.874 225.128 615.374 225.581 615.749 226.217  c
616.124 226.842 616.311 227.566 616.311 228.389  c
616.311 229.493 615.978 230.415 615.311 231.154  c
614.561 231.988 613.410 232.404 611.858 232.404  c
608.311 232.404 l
h
610.577 231.826 m
611.077 231.941 611.494 231.998 611.827 231.998  c
612.733 231.998 613.483 231.680 614.077 231.045  c
614.681 230.399 614.983 229.535 614.983 228.451  c
614.983 227.347 614.681 226.482 614.077 225.857  c
613.483 225.222 612.718 224.904 611.780 224.904  c
611.426 224.904 611.025 224.962 610.577 225.076  c
610.577 231.826 l
h
618.509 224.076 m
618.675 224.076 618.816 224.133 618.930 224.248  c
619.045 224.363 619.102 224.503 619.102 224.670  c
619.102 224.826 619.045 224.967 618.930 225.092  c
618.816 225.206 618.675 225.264 618.509 225.264  c
618.352 225.264 618.212 225.206 618.087 225.092  c
617.972 224.967 617.915 224.826 617.915 224.670  c
617.915 224.503 617.972 224.363 618.087 224.248  c
618.201 224.133 618.342 224.076 618.509 224.076  c
h
619.009 226.873 m
619.009 231.186 l
619.009 231.529 619.029 231.758 619.071 231.873  c
619.123 231.977 619.196 232.055 619.290 232.107  c
619.384 232.160 619.561 232.186 619.821 232.186  c
619.821 232.404 l
617.212 232.404 l
617.212 232.186 l
617.472 232.186 617.644 232.165 617.727 232.123  c
617.821 232.071 617.894 231.988 617.946 231.873  c
617.998 231.748 618.024 231.519 618.024 231.186  c
618.024 229.123 l
618.024 228.540 618.009 228.165 617.977 227.998  c
617.946 227.873 617.899 227.785 617.837 227.732  c
617.785 227.680 617.707 227.654 617.602 227.654  c
617.498 227.654 617.368 227.686 617.212 227.748  c
617.134 227.529 l
618.743 226.873 l
619.009 226.873 l
h
622.046 228.014 m
622.681 227.253 623.280 226.873 623.843 226.873  c
624.134 226.873 624.384 226.946 624.593 227.092  c
624.811 227.238 624.983 227.482 625.108 227.826  c
625.192 228.055 625.233 228.415 625.233 228.904  c
625.233 231.186 l
625.233 231.529 625.259 231.764 625.311 231.889  c
625.363 231.982 625.436 232.055 625.530 232.107  c
625.624 232.160 625.801 232.186 626.061 232.186  c
626.061 232.404 l
623.405 232.404 l
623.405 232.186 l
623.514 232.186 l
623.764 232.186 623.936 232.149 624.030 232.076  c
624.134 232.003 624.207 231.894 624.249 231.748  c
624.259 231.686 624.264 231.498 624.264 231.186  c
624.264 228.998 l
624.264 228.508 624.202 228.154 624.077 227.936  c
623.952 227.706 623.738 227.592 623.436 227.592  c
622.968 227.592 622.504 227.847 622.046 228.357  c
622.046 231.186 l
622.046 231.550 622.067 231.774 622.108 231.857  c
622.171 231.972 622.249 232.055 622.343 232.107  c
622.436 232.160 622.629 232.186 622.921 232.186  c
622.921 232.404 l
620.264 232.404 l
620.264 232.186 l
620.389 232.186 l
620.660 232.186 620.843 232.118 620.936 231.982  c
621.030 231.847 621.077 231.581 621.077 231.186  c
621.077 229.201 l
621.077 228.555 621.061 228.165 621.030 228.029  c
621.009 227.883 620.968 227.785 620.905 227.732  c
620.843 227.680 620.759 227.654 620.655 227.654  c
620.551 227.654 620.421 227.686 620.264 227.748  c
620.186 227.529 l
621.796 226.873 l
622.046 226.873 l
622.046 228.014 l
h
627.921 230.451 m
627.587 230.285 627.332 230.061 627.155 229.779  c
626.988 229.488 626.905 229.170 626.905 228.826  c
626.905 228.295 627.103 227.837 627.499 227.451  c
627.905 227.066 628.421 226.873 629.046 226.873  c
629.556 226.873 629.999 226.998 630.374 227.248  c
631.499 227.248 l
631.676 227.248 631.775 227.253 631.796 227.264  c
631.827 227.274 631.848 227.290 631.858 227.311  c
631.879 227.352 631.889 227.415 631.889 227.498  c
631.889 227.602 631.879 227.675 631.858 227.717  c
631.848 227.738 631.827 227.753 631.796 227.764  c
631.775 227.774 631.676 227.779 631.499 227.779  c
630.811 227.779 l
631.030 228.061 631.139 228.420 631.139 228.857  c
631.139 229.357 630.947 229.785 630.561 230.139  c
630.176 230.493 629.660 230.670 629.014 230.670  c
628.754 230.670 628.483 230.633 628.202 230.561  c
628.035 230.706 627.921 230.837 627.858 230.951  c
627.796 231.055 627.764 231.149 627.764 231.232  c
627.764 231.295 627.796 231.357 627.858 231.420  c
627.931 231.482 628.061 231.529 628.249 231.561  c
628.353 231.571 628.624 231.587 629.061 231.607  c
629.863 231.618 630.384 231.644 630.624 231.686  c
630.988 231.738 631.280 231.873 631.499 232.092  c
631.718 232.311 631.827 232.581 631.827 232.904  c
631.827 233.342 631.619 233.753 631.202 234.139  c
630.587 234.712 629.791 234.998 628.811 234.998  c
628.061 234.998 627.426 234.826 626.905 234.482  c
626.613 234.285 626.468 234.081 626.468 233.873  c
626.468 233.779 626.488 233.686 626.530 233.592  c
626.593 233.446 626.728 233.248 626.936 232.998  c
626.968 232.956 627.171 232.743 627.546 232.357  c
627.337 232.232 627.192 232.123 627.108 232.029  c
627.025 231.936 626.983 231.826 626.983 231.701  c
626.983 231.566 627.035 231.410 627.139 231.232  c
627.254 231.045 627.514 230.785 627.921 230.451  c
h
628.936 227.154 m
628.645 227.154 628.400 227.274 628.202 227.514  c
628.014 227.743 627.921 228.092 627.921 228.561  c
627.921 229.186 628.051 229.665 628.311 229.998  c
628.520 230.258 628.780 230.389 629.093 230.389  c
629.384 230.389 629.624 230.279 629.811 230.061  c
630.009 229.831 630.108 229.477 630.108 228.998  c
630.108 228.383 629.973 227.899 629.702 227.545  c
629.504 227.285 629.249 227.154 628.936 227.154  c
h
627.858 232.404 m
627.681 232.602 627.546 232.785 627.452 232.951  c
627.358 233.128 627.311 233.290 627.311 233.436  c
627.311 233.623 627.421 233.790 627.639 233.936  c
628.035 234.175 628.603 234.295 629.343 234.295  c
630.041 234.295 630.556 234.170 630.889 233.920  c
631.223 233.670 631.389 233.404 631.389 233.123  c
631.389 232.925 631.291 232.779 631.093 232.686  c
630.895 232.602 630.494 232.555 629.889 232.545  c
629.014 232.514 628.337 232.467 627.858 232.404  c
h
635.108 226.873 m
635.921 226.873 636.572 227.186 637.061 227.811  c
637.478 228.331 637.686 228.936 637.686 229.623  c
637.686 230.102 637.572 230.587 637.343 231.076  c
637.113 231.566 636.796 231.941 636.389 232.201  c
635.994 232.451 635.546 232.576 635.046 232.576  c
634.233 232.576 633.593 232.253 633.124 231.607  c
632.718 231.055 632.514 230.446 632.514 229.779  c
632.514 229.279 632.634 228.790 632.874 228.311  c
633.124 227.821 633.447 227.462 633.843 227.232  c
634.238 226.993 634.660 226.873 635.108 226.873  c
h
634.921 227.264 m
634.723 227.264 634.514 227.326 634.296 227.451  c
634.087 227.566 633.921 227.779 633.796 228.092  c
633.671 228.404 633.608 228.800 633.608 229.279  c
633.608 230.061 633.759 230.738 634.061 231.311  c
634.374 231.873 634.785 232.154 635.296 232.154  c
635.671 232.154 635.983 231.998 636.233 231.686  c
636.483 231.373 636.608 230.837 636.608 230.076  c
636.608 229.118 636.400 228.368 635.983 227.826  c
635.712 227.451 635.358 227.264 634.921 227.264  c
h
640.327 224.076 m
640.327 231.186 l
640.327 231.529 640.353 231.758 640.405 231.873  c
640.457 231.977 640.530 232.055 640.624 232.107  c
640.728 232.160 640.921 232.186 641.202 232.186  c
641.202 232.404 l
638.561 232.404 l
638.561 232.186 l
638.811 232.186 638.978 232.165 639.061 232.123  c
639.155 232.071 639.228 231.988 639.280 231.873  c
639.332 231.748 639.358 231.519 639.358 231.186  c
639.358 226.311 l
639.358 225.706 639.343 225.337 639.311 225.201  c
639.291 225.066 639.249 224.972 639.186 224.920  c
639.124 224.868 639.046 224.842 638.952 224.842  c
638.848 224.842 638.718 224.873 638.561 224.936  c
638.468 224.732 l
640.061 224.076 l
640.327 224.076 l
h
643.911 227.451 m
643.911 230.982 l
643.911 231.482 643.968 231.800 644.083 231.936  c
644.229 232.102 644.421 232.186 644.661 232.186  c
645.145 232.186 l
645.145 232.404 l
641.942 232.404 l
641.942 232.186 l
642.177 232.186 l
642.333 232.186 642.473 232.149 642.598 232.076  c
642.734 231.993 642.822 231.889 642.864 231.764  c
642.916 231.628 642.942 231.368 642.942 230.982  c
642.942 227.451 l
641.911 227.451 l
641.911 227.029 l
642.942 227.029 l
642.942 226.686 l
642.942 226.154 643.026 225.701 643.192 225.326  c
643.369 224.951 643.635 224.649 643.989 224.420  c
644.343 224.191 644.744 224.076 645.192 224.076  c
645.598 224.076 645.973 224.212 646.317 224.482  c
646.546 224.660 646.661 224.857 646.661 225.076  c
646.661 225.191 646.609 225.300 646.505 225.404  c
646.401 225.508 646.291 225.561 646.177 225.561  c
646.083 225.561 645.984 225.529 645.880 225.467  c
645.786 225.404 645.666 225.269 645.520 225.061  c
645.385 224.842 645.255 224.696 645.130 224.623  c
645.005 224.540 644.869 224.498 644.723 224.498  c
644.546 224.498 644.395 224.550 644.270 224.654  c
644.145 224.748 644.052 224.894 643.989 225.092  c
643.937 225.290 643.911 225.811 643.911 226.654  c
643.911 227.029 l
645.302 227.029 l
645.302 227.451 l
643.911 227.451 l
h
647.173 224.076 m
647.339 224.076 647.480 224.133 647.595 224.248  c
647.709 224.363 647.766 224.503 647.766 224.670  c
647.766 224.826 647.709 224.967 647.595 225.092  c
647.480 225.206 647.339 225.264 647.173 225.264  c
647.016 225.264 646.876 225.206 646.751 225.092  c
646.636 224.967 646.579 224.826 646.579 224.670  c
646.579 224.503 646.636 224.363 646.751 224.248  c
646.865 224.133 647.006 224.076 647.173 224.076  c
h
647.673 226.873 m
647.673 231.186 l
647.673 231.529 647.694 231.758 647.735 231.873  c
647.787 231.977 647.860 232.055 647.954 232.107  c
648.048 232.160 648.225 232.186 648.485 232.186  c
648.485 232.404 l
645.876 232.404 l
645.876 232.186 l
646.136 232.186 646.308 232.165 646.391 232.123  c
646.485 232.071 646.558 231.988 646.610 231.873  c
646.662 231.748 646.688 231.519 646.688 231.186  c
646.688 229.123 l
646.688 228.540 646.673 228.165 646.641 227.998  c
646.610 227.873 646.563 227.785 646.501 227.732  c
646.449 227.680 646.371 227.654 646.266 227.654  c
646.162 227.654 646.032 227.686 645.876 227.748  c
645.798 227.529 l
647.407 226.873 l
647.673 226.873 l
h
650.710 228.014 m
651.345 227.253 651.944 226.873 652.507 226.873  c
652.798 226.873 653.048 226.946 653.257 227.092  c
653.475 227.238 653.647 227.482 653.772 227.826  c
653.856 228.055 653.897 228.415 653.897 228.904  c
653.897 231.186 l
653.897 231.529 653.923 231.764 653.975 231.889  c
654.027 231.982 654.100 232.055 654.194 232.107  c
654.288 232.160 654.465 232.186 654.725 232.186  c
654.725 232.404 l
652.069 232.404 l
652.069 232.186 l
652.179 232.186 l
652.429 232.186 652.600 232.149 652.694 232.076  c
652.798 232.003 652.871 231.894 652.913 231.748  c
652.923 231.686 652.929 231.498 652.929 231.186  c
652.929 228.998 l
652.929 228.508 652.866 228.154 652.741 227.936  c
652.616 227.706 652.402 227.592 652.100 227.592  c
651.632 227.592 651.168 227.847 650.710 228.357  c
650.710 231.186 l
650.710 231.550 650.731 231.774 650.772 231.857  c
650.835 231.972 650.913 232.055 651.007 232.107  c
651.100 232.160 651.293 232.186 651.585 232.186  c
651.585 232.404 l
648.929 232.404 l
648.929 232.186 l
649.054 232.186 l
649.324 232.186 649.507 232.118 649.600 231.982  c
649.694 231.847 649.741 231.581 649.741 231.186  c
649.741 229.201 l
649.741 228.555 649.725 228.165 649.694 228.029  c
649.673 227.883 649.632 227.785 649.569 227.732  c
649.507 227.680 649.423 227.654 649.319 227.654  c
649.215 227.654 649.085 227.686 648.929 227.748  c
648.850 227.529 l
650.460 226.873 l
650.710 226.873 l
650.710 228.014 l
h
656.585 230.451 m
656.251 230.285 655.996 230.061 655.819 229.779  c
655.652 229.488 655.569 229.170 655.569 228.826  c
655.569 228.295 655.767 227.837 656.163 227.451  c
656.569 227.066 657.085 226.873 657.710 226.873  c
658.220 226.873 658.663 226.998 659.038 227.248  c
660.163 227.248 l
660.340 227.248 660.439 227.253 660.460 227.264  c
660.491 227.274 660.512 227.290 660.522 227.311  c
660.543 227.352 660.554 227.415 660.554 227.498  c
660.554 227.602 660.543 227.675 660.522 227.717  c
660.512 227.738 660.491 227.753 660.460 227.764  c
660.439 227.774 660.340 227.779 660.163 227.779  c
659.475 227.779 l
659.694 228.061 659.804 228.420 659.804 228.857  c
659.804 229.357 659.611 229.785 659.225 230.139  c
658.840 230.493 658.324 230.670 657.679 230.670  c
657.418 230.670 657.147 230.633 656.866 230.561  c
656.699 230.706 656.585 230.837 656.522 230.951  c
656.460 231.055 656.429 231.149 656.429 231.232  c
656.429 231.295 656.460 231.357 656.522 231.420  c
656.595 231.482 656.725 231.529 656.913 231.561  c
657.017 231.571 657.288 231.587 657.725 231.607  c
658.527 231.618 659.048 231.644 659.288 231.686  c
659.652 231.738 659.944 231.873 660.163 232.092  c
660.382 232.311 660.491 232.581 660.491 232.904  c
660.491 233.342 660.283 233.753 659.866 234.139  c
659.251 234.712 658.455 234.998 657.475 234.998  c
656.725 234.998 656.090 234.826 655.569 234.482  c
655.277 234.285 655.132 234.081 655.132 233.873  c
655.132 233.779 655.152 233.686 655.194 233.592  c
655.257 233.446 655.392 233.248 655.600 232.998  c
655.632 232.956 655.835 232.743 656.210 232.357  c
656.001 232.232 655.856 232.123 655.772 232.029  c
655.689 231.936 655.647 231.826 655.647 231.701  c
655.647 231.566 655.699 231.410 655.804 231.232  c
655.918 231.045 656.179 230.785 656.585 230.451  c
h
657.600 227.154 m
657.309 227.154 657.064 227.274 656.866 227.514  c
656.679 227.743 656.585 228.092 656.585 228.561  c
656.585 229.186 656.715 229.665 656.975 229.998  c
657.184 230.258 657.444 230.389 657.757 230.389  c
658.048 230.389 658.288 230.279 658.475 230.061  c
658.673 229.831 658.772 229.477 658.772 228.998  c
658.772 228.383 658.637 227.899 658.366 227.545  c
658.168 227.285 657.913 227.154 657.600 227.154  c
h
656.522 232.404 m
656.345 232.602 656.210 232.785 656.116 232.951  c
656.022 233.128 655.975 233.290 655.975 233.436  c
655.975 233.623 656.085 233.790 656.304 233.936  c
656.699 234.175 657.267 234.295 658.007 234.295  c
658.705 234.295 659.220 234.170 659.554 233.920  c
659.887 233.670 660.054 233.404 660.054 233.123  c
660.054 232.925 659.955 232.779 659.757 232.686  c
659.559 232.602 659.158 232.555 658.554 232.545  c
657.679 232.514 657.001 232.467 656.522 232.404  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
503.000 256.000 m
611.440 256.000 l
S
newpath
619.440 256.000 m
607.440 251.000 l
610.440 256.000 l
607.440 261.000 l
h
f
newpath
522.129 242.232 m
524.067 241.295 l
524.254 241.295 l
524.254 247.998 l
524.254 248.446 524.270 248.727 524.301 248.842  c
524.343 248.946 524.421 249.029 524.536 249.092  c
524.661 249.144 524.900 249.175 525.254 249.186  c
525.254 249.404 l
522.270 249.404 l
522.270 249.186 l
522.645 249.175 522.885 249.144 522.989 249.092  c
523.103 249.029 523.181 248.951 523.223 248.857  c
523.265 248.764 523.286 248.477 523.286 247.998  c
523.286 243.717 l
523.286 243.133 523.270 242.764 523.239 242.607  c
523.207 242.482 523.155 242.389 523.082 242.326  c
523.010 242.264 522.921 242.232 522.817 242.232  c
522.671 242.232 522.473 242.295 522.223 242.420  c
522.129 242.232 l
h
532.223 247.873 m
531.676 249.404 l
526.989 249.404 l
526.989 249.186 l
528.364 247.925 529.332 246.899 529.895 246.107  c
530.457 245.305 530.739 244.576 530.739 243.920  c
530.739 243.420 530.582 243.008 530.270 242.686  c
529.968 242.352 529.598 242.186 529.161 242.186  c
528.775 242.186 528.426 242.300 528.114 242.529  c
527.801 242.758 527.572 243.097 527.426 243.545  c
527.207 243.545 l
527.312 242.816 527.562 242.258 527.957 241.873  c
528.364 241.488 528.869 241.295 529.473 241.295  c
530.119 241.295 530.655 241.503 531.082 241.920  c
531.520 242.326 531.739 242.811 531.739 243.373  c
531.739 243.779 531.645 244.186 531.457 244.592  c
531.166 245.217 530.697 245.883 530.051 246.592  c
529.082 247.654 528.473 248.295 528.223 248.514  c
530.301 248.514 l
530.728 248.514 531.025 248.498 531.192 248.467  c
531.359 248.436 531.510 248.373 531.645 248.279  c
531.791 248.186 531.911 248.050 532.004 247.873  c
532.223 247.873 l
h
536.082 241.076 m
533.207 249.576 l
532.739 249.576 l
535.614 241.076 l
536.082 241.076 l
h
541.557 247.873 m
541.010 249.404 l
536.323 249.404 l
536.323 249.186 l
537.698 247.925 538.666 246.899 539.229 246.107  c
539.791 245.305 540.073 244.576 540.073 243.920  c
540.073 243.420 539.916 243.008 539.604 242.686  c
539.302 242.352 538.932 242.186 538.495 242.186  c
538.109 242.186 537.760 242.300 537.448 242.529  c
537.135 242.758 536.906 243.097 536.760 243.545  c
536.541 243.545 l
536.646 242.816 536.896 242.258 537.291 241.873  c
537.698 241.488 538.203 241.295 538.807 241.295  c
539.453 241.295 539.989 241.503 540.416 241.920  c
540.854 242.326 541.073 242.811 541.073 243.373  c
541.073 243.779 540.979 244.186 540.791 244.592  c
540.500 245.217 540.031 245.883 539.385 246.592  c
538.416 247.654 537.807 248.295 537.557 248.514  c
539.635 248.514 l
540.062 248.514 540.359 248.498 540.526 248.467  c
540.692 248.436 540.844 248.373 540.979 248.279  c
541.125 248.186 541.245 248.050 541.338 247.873  c
541.557 247.873 l
h
542.495 245.482 m
542.495 244.576 542.630 243.795 542.901 243.139  c
543.172 242.482 543.536 241.993 543.995 241.670  c
544.349 241.420 544.713 241.295 545.088 241.295  c
545.692 241.295 546.239 241.607 546.729 242.232  c
547.333 242.993 547.635 244.035 547.635 245.357  c
547.635 246.274 547.500 247.055 547.229 247.701  c
546.969 248.347 546.630 248.816 546.213 249.107  c
545.807 249.399 545.411 249.545 545.026 249.545  c
544.265 249.545 543.635 249.097 543.135 248.201  c
542.708 247.451 542.495 246.545 542.495 245.482  c
h
543.635 245.623 m
543.635 246.717 543.771 247.607 544.041 248.295  c
544.271 248.878 544.604 249.170 545.041 249.170  c
545.250 249.170 545.469 249.076 545.698 248.889  c
545.927 248.701 546.099 248.383 546.213 247.936  c
546.390 247.269 546.479 246.321 546.479 245.092  c
546.479 244.186 546.385 243.430 546.198 242.826  c
546.062 242.378 545.880 242.061 545.651 241.873  c
545.495 241.748 545.302 241.686 545.073 241.686  c
544.812 241.686 544.578 241.805 544.370 242.045  c
544.088 242.368 543.896 242.878 543.791 243.576  c
543.687 244.264 543.635 244.946 543.635 245.623  c
h
553.557 247.873 m
553.010 249.404 l
548.323 249.404 l
548.323 249.186 l
549.698 247.925 550.666 246.899 551.229 246.107  c
551.791 245.305 552.073 244.576 552.073 243.920  c
552.073 243.420 551.916 243.008 551.604 242.686  c
551.302 242.352 550.932 242.186 550.495 242.186  c
550.109 242.186 549.760 242.300 549.448 242.529  c
549.135 242.758 548.906 243.097 548.760 243.545  c
548.541 243.545 l
548.646 242.816 548.896 242.258 549.291 241.873  c
549.698 241.488 550.203 241.295 550.807 241.295  c
551.453 241.295 551.989 241.503 552.416 241.920  c
552.854 242.326 553.073 242.811 553.073 243.373  c
553.073 243.779 552.979 244.186 552.791 244.592  c
552.500 245.217 552.031 245.883 551.385 246.592  c
550.416 247.654 549.807 248.295 549.557 248.514  c
551.635 248.514 l
552.062 248.514 552.359 248.498 552.526 248.467  c
552.692 248.436 552.844 248.373 552.979 248.279  c
553.125 248.186 553.245 248.050 553.338 247.873  c
553.557 247.873 l
h
554.666 242.967 m
554.896 242.436 555.182 242.024 555.526 241.732  c
555.870 241.441 556.302 241.295 556.823 241.295  c
557.458 241.295 557.942 241.503 558.276 241.920  c
558.536 242.222 558.666 242.550 558.666 242.904  c
558.666 243.488 558.302 244.087 557.573 244.701  c
558.062 244.889 558.432 245.160 558.682 245.514  c
558.932 245.868 559.057 246.290 559.057 246.779  c
559.057 247.467 558.838 248.061 558.401 248.561  c
557.838 249.217 557.015 249.545 555.932 249.545  c
555.390 249.545 555.021 249.477 554.823 249.342  c
554.635 249.206 554.541 249.066 554.541 248.920  c
554.541 248.805 554.588 248.706 554.682 248.623  c
554.776 248.529 554.885 248.482 555.010 248.482  c
555.114 248.482 555.213 248.498 555.307 248.529  c
555.380 248.550 555.531 248.623 555.760 248.748  c
556.000 248.873 556.161 248.946 556.245 248.967  c
556.390 249.008 556.547 249.029 556.713 249.029  c
557.109 249.029 557.453 248.878 557.745 248.576  c
558.047 248.264 558.198 247.899 558.198 247.482  c
558.198 247.170 558.130 246.868 557.995 246.576  c
557.890 246.357 557.776 246.191 557.651 246.076  c
557.484 245.920 557.255 245.779 556.963 245.654  c
556.672 245.529 556.375 245.467 556.073 245.467  c
555.885 245.467 l
555.885 245.279 l
556.187 245.248 556.495 245.139 556.807 244.951  c
557.120 244.764 557.344 244.545 557.479 244.295  c
557.625 244.035 557.698 243.748 557.698 243.436  c
557.698 243.040 557.573 242.717 557.323 242.467  c
557.073 242.217 556.760 242.092 556.385 242.092  c
555.771 242.092 555.260 242.415 554.854 243.061  c
554.666 242.967 l
h
561.745 243.873 m
561.932 243.873 562.088 243.936 562.213 244.061  c
562.338 244.186 562.401 244.342 562.401 244.529  c
562.401 244.706 562.338 244.857 562.213 244.982  c
562.088 245.107 561.932 245.170 561.745 245.170  c
561.567 245.170 561.416 245.107 561.291 244.982  c
561.166 244.857 561.104 244.706 561.104 244.529  c
561.104 244.342 561.166 244.186 561.291 244.061  c
561.416 243.936 561.567 243.873 561.745 243.873  c
h
561.745 248.264 m
561.922 248.264 562.073 248.331 562.198 248.467  c
562.333 248.592 562.401 248.743 562.401 248.920  c
562.401 249.097 562.333 249.253 562.198 249.389  c
562.073 249.514 561.922 249.576 561.745 249.576  c
561.557 249.576 561.401 249.514 561.276 249.389  c
561.151 249.253 561.088 249.097 561.088 248.920  c
561.088 248.743 561.151 248.592 561.276 248.467  c
561.401 248.331 561.557 248.264 561.745 248.264  c
h
571.891 247.873 m
571.344 249.404 l
566.657 249.404 l
566.657 249.186 l
568.032 247.925 569.000 246.899 569.563 246.107  c
570.125 245.305 570.407 244.576 570.407 243.920  c
570.407 243.420 570.250 243.008 569.938 242.686  c
569.636 242.352 569.266 242.186 568.829 242.186  c
568.443 242.186 568.094 242.300 567.782 242.529  c
567.469 242.758 567.240 243.097 567.094 243.545  c
566.875 243.545 l
566.980 242.816 567.230 242.258 567.625 241.873  c
568.032 241.488 568.537 241.295 569.141 241.295  c
569.787 241.295 570.323 241.503 570.750 241.920  c
571.188 242.326 571.407 242.811 571.407 243.373  c
571.407 243.779 571.313 244.186 571.125 244.592  c
570.834 245.217 570.365 245.883 569.719 246.592  c
568.750 247.654 568.141 248.295 567.891 248.514  c
569.969 248.514 l
570.396 248.514 570.693 248.498 570.860 248.467  c
571.026 248.436 571.178 248.373 571.313 248.279  c
571.459 248.186 571.579 248.050 571.672 247.873  c
571.891 247.873 l
h
577.594 241.451 m
577.141 242.451 l
574.750 242.451 l
574.235 243.514 l
575.266 243.670 576.084 244.055 576.688 244.670  c
577.209 245.201 577.469 245.826 577.469 246.545  c
577.469 246.962 577.386 247.352 577.219 247.717  c
577.053 248.071 576.839 248.373 576.579 248.623  c
576.318 248.873 576.032 249.071 575.719 249.217  c
575.271 249.436 574.808 249.545 574.329 249.545  c
573.849 249.545 573.500 249.467 573.282 249.311  c
573.073 249.144 572.969 248.962 572.969 248.764  c
572.969 248.660 573.011 248.566 573.094 248.482  c
573.188 248.389 573.303 248.342 573.438 248.342  c
573.542 248.342 573.631 248.357 573.704 248.389  c
573.787 248.420 573.917 248.503 574.094 248.639  c
574.386 248.837 574.683 248.936 574.985 248.936  c
575.443 248.936 575.844 248.764 576.188 248.420  c
576.532 248.076 576.704 247.654 576.704 247.154  c
576.704 246.675 576.547 246.227 576.235 245.811  c
575.933 245.394 575.511 245.076 574.969 244.857  c
574.542 244.680 573.964 244.576 573.235 244.545  c
574.750 241.451 l
577.594 241.451 l
h
578.829 245.482 m
578.829 244.576 578.964 243.795 579.235 243.139  c
579.506 242.482 579.870 241.993 580.329 241.670  c
580.683 241.420 581.047 241.295 581.422 241.295  c
582.026 241.295 582.573 241.607 583.063 242.232  c
583.667 242.993 583.969 244.035 583.969 245.357  c
583.969 246.274 583.834 247.055 583.563 247.701  c
583.303 248.347 582.964 248.816 582.547 249.107  c
582.141 249.399 581.745 249.545 581.360 249.545  c
580.599 249.545 579.969 249.097 579.469 248.201  c
579.042 247.451 578.829 246.545 578.829 245.482  c
h
579.969 245.623 m
579.969 246.717 580.105 247.607 580.375 248.295  c
580.605 248.878 580.938 249.170 581.375 249.170  c
581.584 249.170 581.803 249.076 582.032 248.889  c
582.261 248.701 582.433 248.383 582.547 247.936  c
582.724 247.269 582.813 246.321 582.813 245.092  c
582.813 244.186 582.719 243.430 582.532 242.826  c
582.396 242.378 582.214 242.061 581.985 241.873  c
581.829 241.748 581.636 241.686 581.407 241.686  c
581.146 241.686 580.912 241.805 580.704 242.045  c
580.422 242.368 580.230 242.878 580.125 243.576  c
580.021 244.264 579.969 244.946 579.969 245.623  c
h
587.375 244.576 m
589.032 243.904 l
589.250 243.904 l
589.250 245.154 l
589.532 244.686 589.813 244.357 590.094 244.170  c
590.375 243.972 590.667 243.873 590.969 243.873  c
591.511 243.873 591.959 244.087 592.313 244.514  c
592.761 245.024 592.985 245.696 592.985 246.529  c
592.985 247.456 592.719 248.222 592.188 248.826  c
591.750 249.326 591.198 249.576 590.532 249.576  c
590.240 249.576 589.990 249.535 589.782 249.451  c
589.625 249.389 589.448 249.269 589.250 249.092  c
589.250 250.732 l
589.250 251.097 589.271 251.326 589.313 251.420  c
589.365 251.524 589.443 251.602 589.547 251.654  c
589.662 251.717 589.865 251.748 590.157 251.748  c
590.157 251.967 l
587.344 251.967 l
587.344 251.748 l
587.500 251.748 l
587.709 251.758 587.891 251.722 588.047 251.639  c
588.120 251.587 588.178 251.514 588.219 251.420  c
588.261 251.326 588.282 251.087 588.282 250.701  c
588.282 245.623 l
588.282 245.269 588.266 245.045 588.235 244.951  c
588.204 244.857 588.151 244.790 588.079 244.748  c
588.016 244.696 587.928 244.670 587.813 244.670  c
587.719 244.670 587.599 244.701 587.454 244.764  c
587.375 244.576 l
h
589.250 245.498 m
589.250 247.498 l
589.250 247.936 589.271 248.222 589.313 248.357  c
589.365 248.587 589.495 248.790 589.704 248.967  c
589.922 249.133 590.193 249.217 590.516 249.217  c
590.901 249.217 591.219 249.066 591.469 248.764  c
591.782 248.357 591.938 247.795 591.938 247.076  c
591.938 246.253 591.761 245.623 591.407 245.186  c
591.157 244.883 590.860 244.732 590.516 244.732  c
590.329 244.732 590.141 244.779 589.954 244.873  c
589.808 244.936 589.573 245.144 589.250 245.498  c
h
598.329 247.357 m
598.183 248.066 597.896 248.613 597.469 248.998  c
597.053 249.383 596.589 249.576 596.079 249.576  c
595.464 249.576 594.928 249.321 594.469 248.811  c
594.021 248.290 593.797 247.597 593.797 246.732  c
593.797 245.889 594.047 245.201 594.547 244.670  c
595.058 244.139 595.662 243.873 596.360 243.873  c
596.891 243.873 597.323 244.014 597.657 244.295  c
598.000 244.576 598.172 244.868 598.172 245.170  c
598.172 245.316 598.125 245.436 598.032 245.529  c
597.938 245.623 597.803 245.670 597.625 245.670  c
597.396 245.670 597.224 245.592 597.110 245.436  c
597.037 245.363 596.990 245.212 596.969 244.982  c
596.948 244.743 596.870 244.566 596.735 244.451  c
596.599 244.326 596.412 244.264 596.172 244.264  c
595.776 244.264 595.459 244.410 595.219 244.701  c
594.907 245.087 594.750 245.592 594.750 246.217  c
594.750 246.863 594.907 247.430 595.219 247.920  c
595.532 248.410 595.959 248.654 596.500 248.654  c
596.886 248.654 597.230 248.524 597.532 248.264  c
597.740 248.087 597.948 247.758 598.157 247.279  c
598.329 247.357 l
h
600.217 248.264 m
600.405 248.264 600.561 248.331 600.686 248.467  c
600.811 248.592 600.873 248.743 600.873 248.920  c
600.873 249.097 600.806 249.253 600.670 249.389  c
600.545 249.514 600.394 249.576 600.217 249.576  c
600.040 249.576 599.884 249.514 599.748 249.389  c
599.623 249.253 599.561 249.097 599.561 248.920  c
599.561 248.732 599.623 248.576 599.748 248.451  c
599.884 248.326 600.040 248.264 600.217 248.264  c
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
